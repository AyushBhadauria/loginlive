{"version":3,"sources":["/Users/ayush/Desktop/login/src/app/components/reset/reset.component.html","/Users/ayush/Desktop/login/src/app/components/reset/reset.component.ts","/Users/ayush/Desktop/login/src/app/components/reset/reset.module.ts"],"names":[],"mappings":"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","file":"reset.module.chunk.js","sourcesContent":["module.exports = \"<div *ngIf=loading class=\\\"loading\\\">Loading&#8230;</div>\\n\\n<div class=\\\"login_wrapper\\\">\\n\\t\\n\\t\\t<div class=\\\"container\\\">\\n\\t\\t\\t<div class=\\\"row cf\\\">\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"login_main01 animated fadeInUp\\\">\\n\\t\\t\\t\\t\\t\\t<h1>Welcome To ThankMummy</h1>\\n\\t\\t\\t\\t\\t\\t<h2>Reset Password</h2>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\"><strong>{{error}}</strong></div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\">{{success}}</div>\\n\\t\\t\\t\\t\\t\\t<form  [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onReset(form.value)\\\" id=\\\"myForm\\\" *ngIf=\\\"!success\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"login_form01\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input  type=\\\"password\\\"  formControlName=\\\"newPass\\\" placeholder=\\\" Enter New Password\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div style=\\\"color:red\\\" *ngIf=\\\"newPass.touched && newPass.invalid\\\"  role=\\\"alert\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"color:red\\\" *ngIf=\\\"newPass.errors.required\\\"><strong>New Password Is Required</strong> </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"color:red\\\" *ngIf=\\\"newPass.errors.invalidPassword\\\"><strong>Password should be valid</strong> </div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"login_form01\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input  type=\\\"password\\\"   formControlName=\\\"confirmPass\\\"  placeholder=\\\"Confirm  Password\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div style=\\\"color:red\\\" *ngIf=\\\"confirmPass.touched && confirmPass.invalid\\\"  role=\\\"alert\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\\"color:red\\\" *ngIf=\\\"confirmPass.errors.required\\\"><strong>Confirm Password Is Required</strong> </div>\\n\\t\\t\\t            </div>\\n\\t\\t\\t\\t\\t\\t<div style=\\\"color:red\\\" *ngIf=\\\"confirmPass.touched && confirmPass.valid && newPass.value!=confirmPass.value\\\">Password Not Match</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"login_form01\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" value=\\\"Change Password\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\n\\t</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ayush/Desktop/login/src/app/components/reset/reset.component.html\n// module id = ../../../../../src/app/components/reset/reset.component.html\n// module chunks = reset.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport 'rxjs/add/operator/switchMap';\nimport { Router } from '@angular/router';\nimport{FormGroup,FormBuilder,Validators, AbstractControl, ValidationErrors} from '@angular/forms'\nimport { FormValidator } from '../sign-up/validators/form.validators';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html'\n})\nexport class ResetComponent implements OnInit {\n  error: any;\n  success: any;\n  token:string\n  public loading=false\n  form\n  constructor(private route:ActivatedRoute,\n  private authService:AuthService,\n  private router:Router,\n  fb:FormBuilder) { \n    this.form=fb.group({\n      newPass:['',[\n      Validators.required,\n      FormValidator.passwordValidator],\n    ],\n    confirmPass:['',[\n      Validators.required],]\n    },\n    {validator: this.passwordConfirming}) \n  }\n  \nget newPass(){\n  return this.form.get('newPass')\n}\n\nget confirmPass(){\n  return this.form.get('confirmPass')\n}\npasswordConfirming(c: AbstractControl): { invalid: boolean } {\n  if (c.get('newPass').value !== c.get('confirmPass').value) {\n      return {invalid: true};\n  }\n\n\n  }\n\n  ngOnInit() {\n\n   this.route.paramMap\n   .subscribe(params =>{\n     this.token =params.get('token');\n    \n   })\n  \n  }\n  onReset(){\n    let form:any=this.form.value;\n    this.loading=true\n    this.authService.resetPassword(this.token,form).subscribe(res=>{\n      this.loading=false\n      if(res.success){\n        this.success=res.msg;\n        this.loading=true\n        setTimeout(() => {  \n          this.loading=false\n        this.router.navigate(['/login'])\n        }, 3000);\n      }\n      else{\n       this.error=res.msg\n      }\n    })\n  }\n \n  }\n  \n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ayush/Desktop/login/src/app/components/reset/reset.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResetComponent } from './reset.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ResetComponent\n    }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ResetComponent,],\n  providers:[AuthService]\n})\nexport class ResetModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/ayush/Desktop/login/src/app/components/reset/reset.module.ts"],"sourceRoot":"webpack:///"}